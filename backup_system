#!/bin/bash

read -r -d '' USAGE <<'USAGEEND'
backup_system - backup the current system to the attached DR disk

Options:
    -h          This help text.
    -n          Dry run.  Just show what would be done.
    -w          Show what would be copied to the backup disk.
    -r <system> Back up the specified remote system.
USAGEEND

REMOTE=
DRY_RUN=
while getopts hnwr: flag; do
    case $flag in
        h|\?)
            echo "$USAGE"; exit;;
        n)
            DRY_RUN=1;;
        w)
            WHAT_WOULD_SYNC=1;;
        r)
            REMOTE=$OPTARG;;
    esac
done

if [[ -d /Volumes/CALVIN ]]; then
    DESTINATION_BASE=/Volumes/CALVIN
elif [[ -d /Volumes/HOBBES2 ]]; then
    DESTINATION_BASE=/Volumes/HOBBES2
else
    echo "No destination disk available."
    exit 1
fi

if [[ -n $REMOTE ]]; then
    # set up remote rsync
    SYSTEM=$REMOTE

    RSYNC_SRC_CMD="rsync --verbose --delete --archive --compress --one-file-system -e ssh --numeric-ids $REMOTE:/home/nate/"
else
    HOSTNAME=$(hostname)

    if [[ $HOSTNAME =~ icarus ]]; then
        SYSTEM=icarus
        EXCLUDES="--exclude .Trash --exclude Library --exclude personal_backup"
    elif [[ $HOSTNAME =~ mini ]]; then
        SYSTEM=mini
        EXCLUDES="--exclude .Trash --exclude old_home/Library --exclude Library --exclude personal_backup --exclude annex --exclude old_home/personal_backup"
    else
        echo "Unknown system with hostname: $HOSTNAME"
        exit 1
    fi

    RSYNC="rsync --delete -hvar"

    # these are the same on all systems for now,
    # move up to conditional if that changes
    SOURCE="/Users/jones"  # no trailing slash

    RSYNC_SRC_CMD="$RSYNC $EXCLUDES $SOURCE"
fi

LOG_PATH="$DESTINATION_BASE/systems/logs"
if [[ ! -d $LOG_PATH ]]; then
    mkdir -p $LOG_PATH
fi

DESTINATION="$DESTINATION_BASE/systems/$SYSTEM"
if [[ ! -d $DESTINATION ]]; then
    mkdir -p $DESTINATION
fi

RSYNC_CMD="$RSYNC_SRC_CMD $DESTINATION"

if [[ -n $DRY_RUN ]]; then

    echo $RSYNC_CMD
elif [[ -n $WHAT_WOULD_SYNC ]]; then

    OUTPUT=$(mktemp -t rsync)
    echo "Generating list of files that would sync..."

    eval "$RSYNC_CMD -n" > $OUTPUT

    less $OUTPUT
    rm $OUTPUT
else

    DATE=$(date +%FT%T)
    LOG_FILE=$LOG_PATH/$SYSTEM.$DATE.log

    echo "Backing up $SYSTEM to $DESTINATION"
    echo "Log file: $LOG_FILE"

    eval $RSYNC_CMD > $LOG_FILE

    touch $LOG_PATH/$SYSTEM.latest
fi
